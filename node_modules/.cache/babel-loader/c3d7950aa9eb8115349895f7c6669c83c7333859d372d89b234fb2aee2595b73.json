{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kesha\\\\Desktop\\\\stu\\\\src\\\\components\\\\GeminiChatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Cpu, Send } from 'react-feather';\nimport { gemini } from '../services/gemini';\nimport './GeminiChatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeminiChatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    role: 'assistant',\n    content: \"Hi! I'm your AI assistant for campus events. Ask me about any event, why you should attend, or how to make the most of them!\"\n  }]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = input.trim();\n    setInput('');\n    setMessages(prev => [...prev, {\n      role: 'user',\n      content: userMessage\n    }]);\n    setIsLoading(true);\n    try {\n      const lower = userMessage.toLowerCase();\n\n      // 🔐 Check if GDG approval is requested\n      if (lower.includes(\"gdg\") && lower.includes(\"approve\")) {\n        const responseText = `✅ You have been approved for GDG nomination!\nPlease reach out to your faculty coordinator for the official confirmation.`;\n        setMessages(prev => [...prev, {\n          role: 'assistant',\n          content: responseText\n        }]);\n      } else {\n        const response = await gemini.generateContent(userMessage);\n        const botResponse = response.response.text();\n        setMessages(prev => [...prev, {\n          role: 'assistant',\n          content: botResponse\n        }]);\n      }\n    } catch (error) {\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: '❌ Sorry, I encountered an error. Please try again.'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-header\",\n        children: [/*#__PURE__*/_jsxDEV(Cpu, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"AI Event Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-messages\",\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chatbot-message ${message.role === 'user' ? 'user-message' : 'assistant-message'}`,\n          children: message.content\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"assistant-message chatbot-message\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatbot-loader\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-input-area\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatbot-input-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            onKeyPress: handleKeyPress,\n            placeholder: \"Ask me about campus events...\",\n            className: \"chatbot-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            disabled: isLoading,\n            className: \"chatbot-send-btn\",\n            children: /*#__PURE__*/_jsxDEV(Send, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(GeminiChatbot, \"t1VeEgzrJ/Pefg3dh9tEBexFfxE=\");\n_c = GeminiChatbot;\nexport default GeminiChatbot;\nvar _c;\n$RefreshReg$(_c, \"GeminiChatbot\");","map":{"version":3,"names":["React","useState","Cpu","Send","gemini","jsxDEV","_jsxDEV","GeminiChatbot","_s","messages","setMessages","role","content","input","setInput","isLoading","setIsLoading","sendMessage","trim","userMessage","prev","lower","toLowerCase","includes","responseText","response","generateContent","botResponse","text","error","handleKeyPress","e","key","shiftKey","preventDefault","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","type","value","onChange","target","onKeyPress","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/kesha/Desktop/stu/src/components/GeminiChatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Cpu, Send } from 'react-feather';\r\nimport { gemini } from '../services/gemini';\r\nimport './GeminiChatbot.css';\r\n\r\nconst GeminiChatbot = () => {\r\n  const [messages, setMessages] = useState([\r\n    {\r\n      role: 'assistant',\r\n      content:\r\n        \"Hi! I'm your AI assistant for campus events. Ask me about any event, why you should attend, or how to make the most of them!\",\r\n    },\r\n  ]);\r\n  const [input, setInput] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = input.trim();\r\n    setInput('');\r\n    setMessages((prev) => [...prev, { role: 'user', content: userMessage }]);\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const lower = userMessage.toLowerCase();\r\n\r\n      // 🔐 Check if GDG approval is requested\r\n      if (lower.includes(\"gdg\") && lower.includes(\"approve\")) {\r\n        const responseText = `✅ You have been approved for GDG nomination!\r\nPlease reach out to your faculty coordinator for the official confirmation.`;\r\n        setMessages((prev) => [...prev, { role: 'assistant', content: responseText }]);\r\n      } else {\r\n        const response = await gemini.generateContent(userMessage);\r\n        const botResponse = response.response.text();\r\n        setMessages((prev) => [...prev, { role: 'assistant', content: botResponse }]);\r\n      }\r\n    } catch (error) {\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { role: 'assistant', content: '❌ Sorry, I encountered an error. Please try again.' },\r\n      ]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chatbot-card\">\r\n        <div className=\"chatbot-header\">\r\n          <Cpu size={20} />\r\n          <h2>AI Event Assistant</h2>\r\n        </div>\r\n\r\n        <div className=\"chatbot-messages\">\r\n          {messages.map((message, index) => (\r\n            <div\r\n              key={index}\r\n              className={`chatbot-message ${\r\n                message.role === 'user' ? 'user-message' : 'assistant-message'\r\n              }`}\r\n            >\r\n              {message.content}\r\n            </div>\r\n          ))}\r\n\r\n          {isLoading && (\r\n            <div className=\"assistant-message chatbot-message\">\r\n              <div className=\"chatbot-loader\">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"chatbot-input-area\">\r\n          <div className=\"chatbot-input-box\">\r\n            <input\r\n              type=\"text\"\r\n              value={input}\r\n              onChange={(e) => setInput(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              placeholder=\"Ask me about campus events...\"\r\n              className=\"chatbot-input\"\r\n            />\r\n            <button\r\n              onClick={sendMessage}\r\n              disabled={isLoading}\r\n              className=\"chatbot-send-btn\"\r\n            >\r\n              <Send size={16} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GeminiChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}