{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kesha\\\\Desktop\\\\stu\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Navbar from './components/navbar';\nimport EventList from './components/EventList';\nimport EventForm from './components/EventForm';\nimport TeacherDashboard from './components/TeacherDashboard';\nimport GeminiChatbot from './components/GeminiChatbot';\nimport LoginForm from './components/LoginForm';\nimport firebase from './services/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [activeTab, setActiveTab] = useState('events');\n  const [events, setEvents] = useState([]);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [showForm, setShowForm] = useState(false);\n\n  // Fetch events on login or refresh\n  const loadEvents = async () => {\n    const snapshot = await firebase.firestore.collection('events').get();\n    const fetchedEvents = snapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n    setEvents(fetchedEvents);\n  };\n  useEffect(() => {\n    if (user) {\n      loadEvents();\n    }\n  }, [user]);\n  const handleLogin = () => {\n    setUser(firebase.auth.currentUser);\n    loadEvents();\n  };\n  const handleLogout = async () => {\n    await firebase.auth.signOut();\n    setUser(null);\n  };\n  const handleRegister = async eventId => {\n    const updatedEvents = [...events];\n    const eventIndex = updatedEvents.findIndex(e => e.id === eventId);\n    const event = updatedEvents[eventIndex];\n    if (!event.registeredStudents.includes(user.email)) {\n      event.registeredStudents.push(user.email);\n      await firebase.firestore.collection('events').doc(eventId).update({\n        registeredStudents: event.registeredStudents\n      });\n      setEvents(updatedEvents);\n    }\n  };\n  const handleCreateEvent = () => {\n    setSelectedEvent(null);\n    setShowForm(true);\n  };\n  const handleEditEvent = event => {\n    setSelectedEvent(event);\n    setShowForm(true);\n  };\n  const handleDeleteEvent = async eventId => {\n    await firebase.firestore.collection('events').doc(eventId).delete();\n    setEvents(events.filter(e => e.id !== eventId));\n  };\n  const handleSaveEvent = async formData => {\n    if (selectedEvent) {\n      // Update existing\n      await firebase.firestore.collection('events').doc(selectedEvent.id).update(formData);\n      setEvents(events.map(e => e.id === selectedEvent.id ? {\n        ...e,\n        ...formData\n      } : e));\n    } else {\n      // Create new\n      const newEvent = {\n        ...formData,\n        registeredStudents: [],\n        organizer: user.displayName\n      };\n      const result = await firebase.firestore.collection('events').add(newEvent);\n      newEvent.id = result.id;\n      setEvents([...events, newEvent]);\n    }\n    setShowForm(false);\n    setSelectedEvent(null);\n  };\n  if (!user) return /*#__PURE__*/_jsxDEV(LoginForm, {\n    onLogin: handleLogin\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      user: user,\n      onSignOut: handleLogout,\n      activeTab: activeTab,\n      setActiveTab: setActiveTab\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), activeTab === 'events' && /*#__PURE__*/_jsxDEV(EventList, {\n      events: events,\n      user: user,\n      onRegister: handleRegister,\n      onEdit: handleEditEvent,\n      onDelete: handleDeleteEvent,\n      onCreateEvent: handleCreateEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), activeTab === 'chat' && /*#__PURE__*/_jsxDEV(GeminiChatbot, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 32\n    }, this), activeTab === 'dashboard' && /*#__PURE__*/_jsxDEV(TeacherDashboard, {\n      user: user,\n      events: events.filter(e => e.organizer === user.displayName)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), showForm && /*#__PURE__*/_jsxDEV(EventForm, {\n      event: selectedEvent,\n      onSave: handleSaveEvent,\n      onCancel: () => setShowForm(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Z4Rz0JTaNij/3Ci5YXF/iExxSnE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Navbar","EventList","EventForm","TeacherDashboard","GeminiChatbot","LoginForm","firebase","jsxDEV","_jsxDEV","App","_s","user","setUser","activeTab","setActiveTab","events","setEvents","selectedEvent","setSelectedEvent","showForm","setShowForm","loadEvents","snapshot","firestore","collection","get","fetchedEvents","docs","map","doc","id","data","handleLogin","auth","currentUser","handleLogout","signOut","handleRegister","eventId","updatedEvents","eventIndex","findIndex","e","event","registeredStudents","includes","email","push","update","handleCreateEvent","handleEditEvent","handleDeleteEvent","delete","filter","handleSaveEvent","formData","newEvent","organizer","displayName","result","add","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onSignOut","onRegister","onEdit","onDelete","onCreateEvent","onSave","onCancel","_c","$RefreshReg$"],"sources":["C:/Users/kesha/Desktop/stu/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport Navbar from './components/navbar';\nimport EventList from './components/EventList';\nimport EventForm from './components/EventForm';\nimport TeacherDashboard from './components/TeacherDashboard';\nimport GeminiChatbot from './components/GeminiChatbot';\nimport LoginForm from './components/LoginForm';\n\nimport firebase from './services/firebase';\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [activeTab, setActiveTab] = useState('events');\n  const [events, setEvents] = useState([]);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [showForm, setShowForm] = useState(false);\n\n  // Fetch events on login or refresh\n  const loadEvents = async () => {\n    const snapshot = await firebase.firestore.collection('events').get();\n    const fetchedEvents = snapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n    setEvents(fetchedEvents);\n  };\n\n  useEffect(() => {\n    if (user) {\n      loadEvents();\n    }\n  }, [user]);\n\n  const handleLogin = () => {\n    setUser(firebase.auth.currentUser);\n    loadEvents();\n  };\n\n  const handleLogout = async () => {\n    await firebase.auth.signOut();\n    setUser(null);\n  };\n\n  const handleRegister = async (eventId) => {\n    const updatedEvents = [...events];\n    const eventIndex = updatedEvents.findIndex(e => e.id === eventId);\n    const event = updatedEvents[eventIndex];\n\n    if (!event.registeredStudents.includes(user.email)) {\n      event.registeredStudents.push(user.email);\n      await firebase.firestore.collection('events').doc(eventId).update({\n        registeredStudents: event.registeredStudents\n      });\n      setEvents(updatedEvents);\n    }\n  };\n\n  const handleCreateEvent = () => {\n    setSelectedEvent(null);\n    setShowForm(true);\n  };\n\n  const handleEditEvent = (event) => {\n    setSelectedEvent(event);\n    setShowForm(true);\n  };\n\n  const handleDeleteEvent = async (eventId) => {\n    await firebase.firestore.collection('events').doc(eventId).delete();\n    setEvents(events.filter(e => e.id !== eventId));\n  };\n\n  const handleSaveEvent = async (formData) => {\n    if (selectedEvent) {\n      // Update existing\n      await firebase.firestore.collection('events').doc(selectedEvent.id).update(formData);\n      setEvents(events.map(e => e.id === selectedEvent.id ? { ...e, ...formData } : e));\n    } else {\n      // Create new\n      const newEvent = {\n        ...formData,\n        registeredStudents: [],\n        organizer: user.displayName\n      };\n      const result = await firebase.firestore.collection('events').add(newEvent);\n      newEvent.id = result.id;\n      setEvents([...events, newEvent]);\n    }\n    setShowForm(false);\n    setSelectedEvent(null);\n  };\n\n  if (!user) return <LoginForm onLogin={handleLogin} />;\n\n  return (\n    <div className=\"bg-gray-100 min-h-screen\">\n      <Navbar user={user} onSignOut={handleLogout} activeTab={activeTab} setActiveTab={setActiveTab} />\n      \n      {activeTab === 'events' && (\n        <EventList\n          events={events}\n          user={user}\n          onRegister={handleRegister}\n          onEdit={handleEditEvent}\n          onDelete={handleDeleteEvent}\n          onCreateEvent={handleCreateEvent}\n        />\n      )}\n\n      {activeTab === 'chat' && <GeminiChatbot />}\n      \n      {activeTab === 'dashboard' && (\n        <TeacherDashboard\n          user={user}\n          events={events.filter(e => e.organizer === user.displayName)}\n        />\n      )}\n\n      {showForm && (\n        <EventForm\n          event={selectedEvent}\n          onSave={handleSaveEvent}\n          onCancel={() => setShowForm(false)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}