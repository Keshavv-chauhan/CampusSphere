{"ast":null,"code":"import{useState,useEffect}from'react';import Navbar from'./components/Navbar';import EventList from'./components/EventList';import EventForm from'./components/EventForm';import TeacherDashboard from'./components/TeacherDashboard';import GeminiChatbot from'./components/GeminiChatbot';import LoginForm from'./components/LoginForm';import firebase from'./services/firebase';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[user,setUser]=useState(null);const[activeTab,setActiveTab]=useState('events');const[events,setEvents]=useState([]);const[selectedEvent,setSelectedEvent]=useState(null);const[showForm,setShowForm]=useState(false);// Fetch events on login or refresh\nconst loadEvents=async()=>{const snapshot=await firebase.firestore.collection('events').get();const fetchedEvents=snapshot.docs.map(doc=>({id:doc.id,...doc.data()}));setEvents(fetchedEvents);};useEffect(()=>{if(user){loadEvents();}},[user]);const handleLogin=()=>{setUser(firebase.auth.currentUser);loadEvents();};const handleLogout=async()=>{await firebase.auth.signOut();setUser(null);};const handleRegister=async eventId=>{const updatedEvents=[...events];const eventIndex=updatedEvents.findIndex(e=>e.id===eventId);const event=updatedEvents[eventIndex];if(!event.registeredStudents.includes(user.email)){event.registeredStudents.push(user.email);await firebase.firestore.collection('events').doc(eventId).update({registeredStudents:event.registeredStudents});setEvents(updatedEvents);}};const handleCreateEvent=()=>{setSelectedEvent(null);setShowForm(true);};const handleEditEvent=event=>{setSelectedEvent(event);setShowForm(true);};const handleDeleteEvent=async eventId=>{await firebase.firestore.collection('events').doc(eventId).delete();setEvents(events.filter(e=>e.id!==eventId));};const handleSaveEvent=async formData=>{if(selectedEvent){// Update existing\nawait firebase.firestore.collection('events').doc(selectedEvent.id).update(formData);setEvents(events.map(e=>e.id===selectedEvent.id?{...e,...formData}:e));}else{// Create new\nconst newEvent={...formData,registeredStudents:[],organizer:user.displayName};const result=await firebase.firestore.collection('events').add(newEvent);newEvent.id=result.id;setEvents([...events,newEvent]);}setShowForm(false);setSelectedEvent(null);};if(!user)return/*#__PURE__*/_jsx(LoginForm,{onLogin:handleLogin});return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50\",children:[/*#__PURE__*/_jsx(Navbar,{user:user,onSignOut:handleLogout,activeTab:activeTab,setActiveTab:setActiveTab}),/*#__PURE__*/_jsxs(\"main\",{className:\"transition-all duration-300\",children:[activeTab==='events'&&/*#__PURE__*/_jsx(EventList,{events:events,user:user,onRegister:handleRegister,onEdit:handleEditEvent,onDelete:handleDeleteEvent,onCreateEvent:handleCreateEvent}),activeTab==='chat'&&/*#__PURE__*/_jsx(GeminiChatbot,{}),activeTab==='dashboard'&&/*#__PURE__*/_jsx(TeacherDashboard,{user:user,events:events.filter(e=>e.organizer===user.displayName)})]}),showForm&&/*#__PURE__*/_jsx(EventForm,{event:selectedEvent,onSave:handleSaveEvent,onCancel:()=>setShowForm(false)})]});}export default App;","map":{"version":3,"names":["useState","useEffect","Navbar","EventList","EventForm","TeacherDashboard","GeminiChatbot","LoginForm","firebase","jsx","_jsx","jsxs","_jsxs","App","user","setUser","activeTab","setActiveTab","events","setEvents","selectedEvent","setSelectedEvent","showForm","setShowForm","loadEvents","snapshot","firestore","collection","get","fetchedEvents","docs","map","doc","id","data","handleLogin","auth","currentUser","handleLogout","signOut","handleRegister","eventId","updatedEvents","eventIndex","findIndex","e","event","registeredStudents","includes","email","push","update","handleCreateEvent","handleEditEvent","handleDeleteEvent","delete","filter","handleSaveEvent","formData","newEvent","organizer","displayName","result","add","onLogin","className","children","onSignOut","onRegister","onEdit","onDelete","onCreateEvent","onSave","onCancel"],"sources":["C:/Users/kesha/Desktop/stu/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport Navbar from './components/Navbar';\nimport EventList from './components/EventList';\nimport EventForm from './components/EventForm';\nimport TeacherDashboard from './components/TeacherDashboard';\nimport GeminiChatbot from './components/GeminiChatbot';\nimport LoginForm from './components/LoginForm';\n\nimport firebase from './services/firebase';\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [activeTab, setActiveTab] = useState('events');\n  const [events, setEvents] = useState([]);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [showForm, setShowForm] = useState(false);\n\n  // Fetch events on login or refresh\n  const loadEvents = async () => {\n    const snapshot = await firebase.firestore.collection('events').get();\n    const fetchedEvents = snapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n    setEvents(fetchedEvents);\n  };\n\n  useEffect(() => {\n    if (user) {\n      loadEvents();\n    }\n  }, [user]);\n\n  const handleLogin = () => {\n    setUser(firebase.auth.currentUser);\n    loadEvents();\n  };\n\n  const handleLogout = async () => {\n    await firebase.auth.signOut();\n    setUser(null);\n  };\n\n  const handleRegister = async (eventId) => {\n    const updatedEvents = [...events];\n    const eventIndex = updatedEvents.findIndex(e => e.id === eventId);\n    const event = updatedEvents[eventIndex];\n\n    if (!event.registeredStudents.includes(user.email)) {\n      event.registeredStudents.push(user.email);\n      await firebase.firestore.collection('events').doc(eventId).update({\n        registeredStudents: event.registeredStudents\n      });\n      setEvents(updatedEvents);\n    }\n  };\n\n  const handleCreateEvent = () => {\n    setSelectedEvent(null);\n    setShowForm(true);\n  };\n\n  const handleEditEvent = (event) => {\n    setSelectedEvent(event);\n    setShowForm(true);\n  };\n\n  const handleDeleteEvent = async (eventId) => {\n    await firebase.firestore.collection('events').doc(eventId).delete();\n    setEvents(events.filter(e => e.id !== eventId));\n  };\n\n  const handleSaveEvent = async (formData) => {\n    if (selectedEvent) {\n      // Update existing\n      await firebase.firestore.collection('events').doc(selectedEvent.id).update(formData);\n      setEvents(events.map(e => e.id === selectedEvent.id ? { ...e, ...formData } : e));\n    } else {\n      // Create new\n      const newEvent = {\n        ...formData,\n        registeredStudents: [],\n        organizer: user.displayName\n      };\n      const result = await firebase.firestore.collection('events').add(newEvent);\n      newEvent.id = result.id;\n      setEvents([...events, newEvent]);\n    }\n    setShowForm(false);\n    setSelectedEvent(null);\n  };\n\n  if (!user) return <LoginForm onLogin={handleLogin} />;\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50\">\n      <Navbar user={user} onSignOut={handleLogout} activeTab={activeTab} setActiveTab={setActiveTab} />\n      \n      <main className=\"transition-all duration-300\">\n        {activeTab === 'events' && (\n          <EventList\n            events={events}\n            user={user}\n            onRegister={handleRegister}\n            onEdit={handleEditEvent}\n            onDelete={handleDeleteEvent}\n            onCreateEvent={handleCreateEvent}\n          />\n        )}\n\n        {activeTab === 'chat' && <GeminiChatbot />}\n        \n        {activeTab === 'dashboard' && (\n          <TeacherDashboard\n            user={user}\n            events={events.filter(e => e.organizer === user.displayName)}\n          />\n        )}\n      </main>\n\n      {showForm && (\n        <EventForm\n          event={selectedEvent}\n          onSave={handleSaveEvent}\n          onCancel={() => setShowForm(false)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}