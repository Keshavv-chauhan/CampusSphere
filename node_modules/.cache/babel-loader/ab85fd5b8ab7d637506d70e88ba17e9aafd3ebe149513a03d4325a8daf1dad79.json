{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kesha\\\\Desktop\\\\stu\\\\src\\\\components\\\\GeminiChatbot.js\",\n  _s = $RefreshSig$();\n// src/components/GeminiChatbot.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Cpu, Send } from 'react-feather';\nimport { gemini } from '../services/gemini';\nimport './GeminiChatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GeminiChatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    role: 'assistant',\n    content: \"Hi! I'm your AI assistant for campus events. Ask me about any event, why you should attend, or how to make the most of them!\"\n  }]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messageEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messageEndRef$curren;\n    (_messageEndRef$curren = messageEndRef.current) === null || _messageEndRef$curren === void 0 ? void 0 : _messageEndRef$curren.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = input.trim();\n    setInput('');\n    setMessages(prev => [...prev, {\n      role: 'user',\n      content: userMessage\n    }]);\n    setIsLoading(true);\n    try {\n      const response = await gemini.generateContent(userMessage);\n      const botResponse = await response.response.text();\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: botResponse\n      }]);\n    } catch (error) {\n      console.error('Gemini Error:', error);\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: 'Sorry, I encountered an error. Please try again.'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-header\",\n        children: [/*#__PURE__*/_jsxDEV(Cpu, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"AI Event Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-messages\",\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chatbot-message ${message.role === 'user' ? 'user-message' : 'assistant-message'}`,\n          children: message.content\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"assistant-message chatbot-message\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chatbot-loader\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messageEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-input-area\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatbot-input-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            onKeyPress: handleKeyPress,\n            placeholder: \"Ask me about campus events...\",\n            className: \"chatbot-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            disabled: isLoading,\n            className: \"chatbot-send-btn\",\n            children: /*#__PURE__*/_jsxDEV(Send, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(GeminiChatbot, \"Atqk914qN6RujmtFuZTDm2nw7y8=\");\n_c = GeminiChatbot;\nexport default GeminiChatbot;\nvar _c;\n$RefreshReg$(_c, \"GeminiChatbot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Cpu","Send","gemini","jsxDEV","_jsxDEV","GeminiChatbot","_s","messages","setMessages","role","content","input","setInput","isLoading","setIsLoading","messageEndRef","scrollToBottom","_messageEndRef$curren","current","scrollIntoView","behavior","sendMessage","trim","userMessage","prev","response","generateContent","botResponse","text","error","console","handleKeyPress","e","key","shiftKey","preventDefault","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","ref","type","value","onChange","target","onKeyPress","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/kesha/Desktop/stu/src/components/GeminiChatbot.js"],"sourcesContent":["// src/components/GeminiChatbot.js\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { Cpu, Send } from 'react-feather';\r\nimport { gemini } from '../services/gemini';\r\nimport './GeminiChatbot.css';\r\n\r\nconst GeminiChatbot = () => {\r\n  const [messages, setMessages] = useState([\r\n    {\r\n      role: 'assistant',\r\n      content:\r\n        \"Hi! I'm your AI assistant for campus events. Ask me about any event, why you should attend, or how to make the most of them!\",\r\n    },\r\n  ]);\r\n  const [input, setInput] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const messageEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messageEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = input.trim();\r\n    setInput('');\r\n    setMessages((prev) => [...prev, { role: 'user', content: userMessage }]);\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await gemini.generateContent(userMessage);\r\n      const botResponse = await response.response.text();\r\n      setMessages((prev) => [...prev, { role: 'assistant', content: botResponse }]);\r\n    } catch (error) {\r\n      console.error('Gemini Error:', error);\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { role: 'assistant', content: 'Sorry, I encountered an error. Please try again.' },\r\n      ]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chatbot-card\">\r\n        <div className=\"chatbot-header\">\r\n          <Cpu size={20} />\r\n          <h2>AI Event Assistant</h2>\r\n        </div>\r\n\r\n        <div className=\"chatbot-messages\">\r\n          {messages.map((message, index) => (\r\n            <div\r\n              key={index}\r\n              className={`chatbot-message ${\r\n                message.role === 'user' ? 'user-message' : 'assistant-message'\r\n              }`}\r\n            >\r\n              {message.content}\r\n            </div>\r\n          ))}\r\n\r\n          {isLoading && (\r\n            <div className=\"assistant-message chatbot-message\">\r\n              <div className=\"chatbot-loader\">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div ref={messageEndRef} />\r\n        </div>\r\n\r\n        <div className=\"chatbot-input-area\">\r\n          <div className=\"chatbot-input-box\">\r\n            <input\r\n              type=\"text\"\r\n              value={input}\r\n              onChange={(e) => setInput(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              placeholder=\"Ask me about campus events...\"\r\n              className=\"chatbot-input\"\r\n            />\r\n            <button\r\n              onClick={sendMessage}\r\n              disabled={isLoading}\r\n              className=\"chatbot-send-btn\"\r\n            >\r\n              <Send size={16} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GeminiChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}