{"ast":null,"code":"import{useState,useEffect}from'react';import Navbar from'./components/Navbar';import EventList from'./components/EventList';import EventForm from'./components/EventForm';import TeacherDashboard from'./components/TeacherDashboard';import GeminiChatbot from'./components/GeminiChatbot';import LoginForm from'./components/LoginForm';import{collection,getDocs}from'firebase/firestore';import{auth,firestore}from'./services/firebase';// ✅ Named imports\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[user,setUser]=useState(null);const[activeTab,setActiveTab]=useState('events');const[events,setEvents]=useState([]);const[selectedEvent,setSelectedEvent]=useState(null);const[showForm,setShowForm]=useState(false);const loadEvents=async()=>{const snapshot=await getDocs(collection(firestore,'events'));const fetchedEvents=snapshot.docs.map(doc=>({id:doc.id,...doc.data()}));setEvents(fetchedEvents);};useEffect(()=>{if(user)loadEvents();},[user]);const handleLogin=()=>{setUser(auth.currentUser);loadEvents();};const handleLogout=async()=>{await auth.signOut();setUser(null);};const handleRegister=async eventId=>{const updatedEvents=[...events];const eventIndex=updatedEvents.findIndex(e=>e.id===eventId);const event=updatedEvents[eventIndex];if(!event.registeredStudents.includes(user.email)){event.registeredStudents.push(user.email);await firestore.collection('events').doc(eventId).update({registeredStudents:event.registeredStudents});setEvents(updatedEvents);}};const handleCreateEvent=()=>{setSelectedEvent(null);setShowForm(true);};const handleEditEvent=event=>{setSelectedEvent(event);setShowForm(true);};const handleDeleteEvent=async eventId=>{await firestore.collection('events').doc(eventId).delete();setEvents(events.filter(e=>e.id!==eventId));};const handleSaveEvent=async formData=>{if(selectedEvent){await firestore.collection('events').doc(selectedEvent.id).update(formData);setEvents(events.map(e=>e.id===selectedEvent.id?{...e,...formData}:e));}else{const newEvent={...formData,registeredStudents:[],organizer:user.displayName};const result=await firestore.collection('events').add(newEvent);newEvent.id=result.id;setEvents([...events,newEvent]);}setShowForm(false);setSelectedEvent(null);};if(!user)return/*#__PURE__*/_jsx(LoginForm,{onLogin:handleLogin});return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50\",children:[/*#__PURE__*/_jsx(Navbar,{user:user,onSignOut:handleLogout,activeTab:activeTab,setActiveTab:setActiveTab}),/*#__PURE__*/_jsxs(\"main\",{className:\"transition-all duration-300\",children:[activeTab==='events'&&/*#__PURE__*/_jsx(EventList,{events:events,user:user,onRegister:handleRegister,onEdit:handleEditEvent,onDelete:handleDeleteEvent,onCreateEvent:handleCreateEvent}),activeTab==='chat'&&/*#__PURE__*/_jsx(GeminiChatbot,{}),activeTab==='dashboard'&&/*#__PURE__*/_jsx(TeacherDashboard,{user:user,events:events.filter(e=>e.organizer===user.displayName)})]}),showForm&&/*#__PURE__*/_jsx(EventForm,{event:selectedEvent,onSave:handleSaveEvent,onCancel:()=>setShowForm(false)})]});}export default App;","map":{"version":3,"names":["useState","useEffect","Navbar","EventList","EventForm","TeacherDashboard","GeminiChatbot","LoginForm","collection","getDocs","auth","firestore","jsx","_jsx","jsxs","_jsxs","App","user","setUser","activeTab","setActiveTab","events","setEvents","selectedEvent","setSelectedEvent","showForm","setShowForm","loadEvents","snapshot","fetchedEvents","docs","map","doc","id","data","handleLogin","currentUser","handleLogout","signOut","handleRegister","eventId","updatedEvents","eventIndex","findIndex","e","event","registeredStudents","includes","email","push","update","handleCreateEvent","handleEditEvent","handleDeleteEvent","delete","filter","handleSaveEvent","formData","newEvent","organizer","displayName","result","add","onLogin","className","children","onSignOut","onRegister","onEdit","onDelete","onCreateEvent","onSave","onCancel"],"sources":["C:/Users/kesha/Desktop/stu/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport Navbar from './components/Navbar';\nimport EventList from './components/EventList';\nimport EventForm from './components/EventForm';\nimport TeacherDashboard from './components/TeacherDashboard';\nimport GeminiChatbot from './components/GeminiChatbot';\nimport LoginForm from './components/LoginForm';\nimport { collection, getDocs } from 'firebase/firestore';\n\nimport { auth, firestore } from './services/firebase'; // ✅ Named imports\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [activeTab, setActiveTab] = useState('events');\n  const [events, setEvents] = useState([]);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [showForm, setShowForm] = useState(false);\n\n  const loadEvents = async () => {\nconst snapshot = await getDocs(collection(firestore, 'events'));\n    const fetchedEvents = snapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n    setEvents(fetchedEvents);\n  };\n\n  useEffect(() => {\n    if (user) loadEvents();\n  }, [user]);\n\n  const handleLogin = () => {\n    setUser(auth.currentUser);\n    loadEvents();\n  };\n\n  const handleLogout = async () => {\n    await auth.signOut();\n    setUser(null);\n  };\n\n  const handleRegister = async (eventId) => {\n    const updatedEvents = [...events];\n    const eventIndex = updatedEvents.findIndex(e => e.id === eventId);\n    const event = updatedEvents[eventIndex];\n\n    if (!event.registeredStudents.includes(user.email)) {\n      event.registeredStudents.push(user.email);\n      await firestore.collection('events').doc(eventId).update({\n        registeredStudents: event.registeredStudents\n      });\n      setEvents(updatedEvents);\n    }\n  };\n\n  const handleCreateEvent = () => {\n    setSelectedEvent(null);\n    setShowForm(true);\n  };\n\n  const handleEditEvent = (event) => {\n    setSelectedEvent(event);\n    setShowForm(true);\n  };\n\n  const handleDeleteEvent = async (eventId) => {\n    await firestore.collection('events').doc(eventId).delete();\n    setEvents(events.filter(e => e.id !== eventId));\n  };\n\n  const handleSaveEvent = async (formData) => {\n    if (selectedEvent) {\n      await firestore.collection('events').doc(selectedEvent.id).update(formData);\n      setEvents(events.map(e => e.id === selectedEvent.id ? { ...e, ...formData } : e));\n    } else {\n      const newEvent = {\n        ...formData,\n        registeredStudents: [],\n        organizer: user.displayName\n      };\n      const result = await firestore.collection('events').add(newEvent);\n      newEvent.id = result.id;\n      setEvents([...events, newEvent]);\n    }\n    setShowForm(false);\n    setSelectedEvent(null);\n  };\n\n  if (!user) return <LoginForm onLogin={handleLogin} />;\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50\">\n      <Navbar user={user} onSignOut={handleLogout} activeTab={activeTab} setActiveTab={setActiveTab} />\n      \n      <main className=\"transition-all duration-300\">\n        {activeTab === 'events' && (\n          <EventList\n            events={events}\n            user={user}\n            onRegister={handleRegister}\n            onEdit={handleEditEvent}\n            onDelete={handleDeleteEvent}\n            onCreateEvent={handleCreateEvent}\n          />\n        )}\n\n        {activeTab === 'chat' && <GeminiChatbot />}\n        \n        {activeTab === 'dashboard' && (\n          <TeacherDashboard\n            user={user}\n            events={events.filter(e => e.organizer === user.displayName)}\n          />\n        )}\n      </main>\n\n      {showForm && (\n        <EventForm\n          event={selectedEvent}\n          onSave={handleSaveEvent}\n          onCancel={() => setShowForm(false)}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}